name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: requirements.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Prepare vars (version, model, repo, image)
        id: prep
        shell: bash
        run: |
          VERSION="${GITHUB_REF_NAME}"
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"

          if [[ "$VERSION" == "v0.2" ]]; then
            MODEL="ridge"
          else
            MODEL="linear"
          fi
          echo "model=${MODEL}" >> "$GITHUB_OUTPUT"

          REPO_LC="$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')"
          IMAGE="ghcr.io/${REPO_LC}:${VERSION}"
          echo "repo=${REPO_LC}"  >> "$GITHUB_OUTPUT"
          echo "image=${IMAGE}"   >> "$GITHUB_OUTPUT"

      - name: Train model
        run: |
          export PYTHONPATH="$PYTHONPATH:$(pwd)"
          python src/train.py --version "${{ steps.prep.outputs.version }}" --model "${{ steps.prep.outputs.model }}"

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        run: docker build \
          --build-arg VERSION="${{ steps.prep.outputs.version }}" \
          -t "${{ steps.prep.outputs.image }}" 

      - name: Smoke test container
        run: |
          docker run -d -p 8080:8080 --name test-container "${{ steps.prep.outputs.image }}"
          sleep 10
          curl -fsS http://localhost:8080/health
          docker rm -f test-container

      - name: Push image
        run: docker push "${{ steps.prep.outputs.image }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.prep.outputs.version }}
          name: "Release ${{ steps.prep.outputs.version }}"
          body: |
            Model trained with **${{ steps.prep.outputs.model }}** regression.
            Docker image pushed to:
            ${{ steps.prep.outputs.image }}
